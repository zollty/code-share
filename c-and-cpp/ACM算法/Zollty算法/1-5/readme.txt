Title：指令识别

Description: 

有一个用来检测用户输入的指令之格式是否正确的程序，当且仅当用户输入正确的指令后，才pass，否则提示指令错误。

首先我们可以自定义一些数据，格式形如
id int(4)
name char(20)
为简单起见，我们约定，这些数据只包含3个部分，例如上面的第一条数据的三个部分分别是：id，int和（4）。第一部分名字可以自己定义 ，但是必须是英文字母，第二个部分只能在int和char中二选一，第三个部分必须用括号括起来，里面存放一个正整数，其大小不会超过254。

正确指令的格式形如：
id=9999
name="zollty"

指令正确与否的标准如下:
1.有且只有一个等号，等号左边是一个英文单词，这个英文单词必须完全匹配一个我们自定义数据的第一部分。

2.等号右边可以是整数或者用双引号括起来的英文单词，但是必须和左边单词所在的自定义数据中的第二、三部分相对应，例如，上面的指令“id=9999”，id所在的自定义数据项是“id int(4)”，所以指令的右端项就必须是整数，而且位数必须小于等于4，同理，指令name="zollty"的右端项必须是字符串，而且除去双引号后的长度不能超过20。

3.举例说明，类似于下面这些指令都是不正确的：
id=100000 --位数大于4
id="duby"  --不是整数
name=1234  --不是字符串
name="a2a3" --不是英文单词
name="aa=a"a"  --有多余的引号和等号
name="go"od  --引号没有把od括起来
name=go"od"  --引号前面的go没括起来

Input: 
输入1到多行自定义数据，格式如上面所述。之后换行输入一个#号再换行，最后输入一个字符串，代表用于检测的指令。


Output: 
如果检测输入的指令正确，则输出“Right!”，错误则输出“Wrong!”

Sample test: 
输入：
id int(4)
name char(20)
#
id=9999
输出：
Right!

输入
id int(4)
name char(20)
#
name="AC"M
输出
Wrong!
